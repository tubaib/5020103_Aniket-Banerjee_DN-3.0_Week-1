1. Create a New Java Project
Open your preferred Java IDE (such as IntelliJ IDEA, Eclipse, etc.).
Create a new Java project named DecoratorPatternExample.

2. Define Component Interface
public interface Notifier {
    void send(String message);
}

3. Implement Concrete Component
public class EmailNotifier implements Notifier {
    @Override
    public void send(String message) {
        System.out.println("Sending email notification: " + message);
    }
}

4.Implement Decorator Classes
public abstract class NotifierDecorator implements Notifier {
    protected Notifier wrappedNotifier;

    public NotifierDecorator(Notifier notifier) {
        this.wrappedNotifier = notifier;
    }

    
    public void send(String message) {
        wrappedNotifier.send(message);
    }
}

Create concrete decorator classes like SMSNotifierDecorator, SlackNotifierDecorator that extend NotifierDecorator.
public class SMSNotifierDecorator extends NotifierDecorator {
    public SMSNotifierDecorator(Notifier notifier) {
        super(notifier);
    }

   
    public void send(String message) {
        super.send(message);
        sendSMS(message);
    }

    private void sendSMS(String message) {
        System.out.println("Sending SMS notification: " + message);
    }
}

public class SlackNotifierDecorator extends NotifierDecorator {
    public SlackNotifierDecorator(Notifier notifier) {
        super(notifier);
    }

    
    public void send(String message) {
        super.send(message);
        sendSlack(message);
    }

    private void sendSlack(String message) {
        System.out.println("Sending Slack notification: " + message);
    }
}

5.Test the Proxy Implementation
public class ProxyPatternTest {
    public static void main(String[] args) {
        Image image1 = new ProxyImage("image1.jpg");
        Image image2 = new ProxyImage("image2.jpg");

        
        image1.display();
        System.out.println("");

       
        image1.display();
        System.out.println("");

      
        image2.display();
        System.out.println("");

      
        image2.display();
    }
}


